\chapter{Conclusion and Future Work}
We have inspected grid job scheduling problem with additional dimension i.e. introduced precedence constraint with heterogeneous resources and types. Scheduling jobs while keeping multiple objectives in consideration is a challenging task on a dynamic grid environment. Beyond this, scheduling in grid being a real time operation, the scheduler should produce result within few seconds or minutes. We have created resource manager, adding and dropping resources simulating dynamic grid environment and making scheduler task worst. We have formularized minimization functions, created avant-garde crossover, mutation and selection operator, merged with existing technology of pareto based optimization technique. The scheduler module outputs a set of best schedules on each run and offer grid administrator a better grip in choosing a schedule compatible according to the grid environment at that moment.
Job-grouping technique for fine-grained jobs keeping precedence constraint and resource constraint accelerates the yield of scheduler. \\
Our job scheduler have not considered some real world scenarios like transfer of jobs  or input files from one cluster to another before executing it. Resources leaving grid unexpectedly have a huge impact of resource utilization and QoS given to the jobs. If scheduler somehow obtain knowledge about the behavior of resources from grid logs, MTTF(Mean Time to Failure); it can schedule accordingly. Mining grid logs and find behaviour of the resources and jobs is important in real world scenarios.\\
